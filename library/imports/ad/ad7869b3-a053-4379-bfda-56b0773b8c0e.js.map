{"version":3,"sources":["assets\\Scripts\\Block.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    Board: cc.Node = null\r\n\r\n    CoTheDat = false\r\n    DaDat = false\r\n    Ngang: number = null\r\n    Doc: number = null\r\n    Number = 0\r\n    Color: cc.SpriteFrame = null\r\n    ComponentBoard: any = null\r\n    \r\n    onLoad()\r\n    {\r\n        // this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this)\r\n        // this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this)\r\n        // this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this)\r\n        this.Board = cc.find('Canvas/Screen2/Board')\r\n        this.ComponentBoard = this.Board.getComponent(\"Board\")\r\n        // this.schedule(this.updateTrangThai,0.2)\r\n    }\r\n    setUp(Number: number)\r\n    {\r\n        this.Number = Number\r\n        // this.NumberLabel.string = this.Number.toString()\r\n        this.node.getComponent(cc.Sprite).spriteFrame = this.Board.getComponent(\"Board\").ColorArray[Number]\r\n        this.Color = this.Board.getComponent(\"Board\").ColorArray[Number]\r\n    }\r\n\r\n    // onTouchStart(event: cc.Event.EventTouch)\r\n    // {\r\n    //     this.node.opacity = 100\r\n    //     this.Board.getComponent(\"Board\").ColorAnDiem = this.Color\r\n    // }\r\n\r\n    // onTouchMove(event: cc.Event.EventTouch)\r\n    // {\r\n    //     let touch = event.getTouches()[0]\r\n    //     let touch_pos = touch.getLocation()\r\n    //     let standard_touch_pos = this.Board.convertToNodeSpaceAR(touch_pos)\r\n    //     this.node.setPosition(standard_touch_pos)\r\n    //     // let touch = event.getTouches()[0]\r\n    //     // let pos = touch.getLocation()\r\n    //     // let prepos = this.node.getPosition()\r\n    //     // prepos.lerp(pos,0.1,prepos)\r\n    //     // this.node.setPosition(prepos)\r\n    // }\r\n\r\n    // onTouchEnd(event: cc.Event.EventTouch)\r\n    // {\r\n    //     this.node.opacity = 255\r\n    //     if(this.CoTheDat&&this.Ngang!=null&&this.Doc!=null)\r\n    //     {\r\n    //         this.ComponentBoard.Prepos[this.Ngang][this.Doc] = 1\r\n    //         console.log(this.ComponentBoard.Prepos)\r\n    //         this.Board.getComponent(\"Board\").BlockArray[this.Ngang][this.Doc].destroy()\r\n    //         this.Board.getComponent(\"Board\").BlockArray[this.Ngang][this.Doc] = this.node\r\n    //         this.node.setPosition(this.Board.getComponent(\"Board\").VTNgang[this.Doc],this.Board.getComponent(\"Board\").VTDoc[this.Ngang])\r\n    //         this.ComponentBoard.taoBlockNgauNhien()\r\n    //         this.ComponentBoard.checkAnDiem()\r\n    //         this.turnOffListener()\r\n    //         // this.unschedule(this.updateTrangThai)\r\n    //     }\r\n    //     else\r\n    //     {\r\n    //         this.node.setPosition(0,-450)\r\n    //     }\r\n    // }\r\n\r\n    onCollisionEnter(other, self)\r\n    {\r\n        // console.log(other.tag)\r\n        if (other.tag == 1)\r\n        {\r\n            this.CoTheDat = true\r\n            // console.log('va cham voi empty')\r\n            this.Ngang = other.getComponent(\"EmptyBlock\").Ngang\r\n            this.Doc = other.getComponent(\"EmptyBlock\").Doc\r\n            // console.log(other.getComponent(\"EmptyBlock\").Ngang,other.getComponent(\"EmptyBlock\").Doc)\r\n            // console.log(this.Ngang,this.Doc)\r\n        }\r\n        if (other.tag == 3)\r\n        {\r\n            this.CoTheDat = true\r\n        }\r\n    }\r\n\r\n    onCollisionExit(other, self)\r\n    {\r\n        if (other.tag == 3)\r\n        {\r\n            // console.log('exit va cham voi empty')\r\n            this.CoTheDat = false\r\n        }\r\n        if (other.tag == 1)\r\n        {\r\n            this.CoTheDat = false\r\n            this.Ngang = null\r\n            this.Doc = null\r\n        //     this.Ngang = null\r\n        //     this.Doc = null\r\n        }\r\n    }\r\n    // updateTrangThai()\r\n    // {\r\n    //     console.log(this.CoTheDat)\r\n    // }\r\n    turnOffListener()\r\n    {\r\n        // this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this)\r\n        // this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this)\r\n        // this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this)\r\n    }\r\n    // anDiem()\r\n    // {\r\n    //     cc.tween(this.node).to(0.1,{scale: 1.3}).to(0.1,{scale: 1}).start()\r\n    //     this.Number +=1\r\n    //     if(this.Number ==5){\r\n    //         cc.tween(this.node).to(0.1,{scale:0}).call(()=>{\r\n    //             this.Board.getComponent(\"Board\").taoEmptyBlock(this.Ngang,this.Doc)\r\n    //         }).call(()=>{\r\n    //             this.node.destroy()\r\n    //         }).start()\r\n    //     }\r\n    //     this.NumberLabel.string = this.Number.toString()\r\n    //     this.node.color = this.ColorArray[this.Number-1]\r\n    // }\r\n    // update(dt)\r\n    // {\r\n    //     console.log(this.Ngang, this.Doc)\r\n    // }\r\n}"]}