{"version":3,"sources":["assets\\Scripts\\FBInstantManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// import GameController from './GameController';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nconst LEADERBOARD_NAME = 'Hexa Leaderboard.';\r\nconst DATA_KEY = 'userData';\r\n\r\n@ccclass\r\nexport default class GBInstantManager {\r\n    private static instance: GBInstantManager;\r\n\r\n    private shareImg;\r\n    private playerId = '';\r\n\r\n    // protected _gameController: GameController = cc\r\n    //     .find('GameController')\r\n    //     .getComponent('GameController');\r\n\r\n    /**\r\n     * The Singleton's constructor should always be private to prevent direct\r\n     * construction calls with the `new` operator.\r\n     */\r\n    private constructor() {}\r\n\r\n    /**\r\n     * The static method that controls the access to the singleton instance.\r\n     *\r\n     * This implementation let you subclass the Singleton class while keeping\r\n     * just one instance of each subclass around.\r\n     */\r\n    public static getInstance(): GBInstantManager {\r\n        if (!GBInstantManager.instance) {\r\n            GBInstantManager.instance = new GBInstantManager();\r\n        }\r\n\r\n        return GBInstantManager.instance;\r\n    }\r\n\r\n    public getPlayerId() {\r\n        if (!this.playerId) {\r\n            try {\r\n                this.playerId = FBInstant.player.getID();\r\n            } catch (err) {\r\n                this.playerId = 'localId';\r\n            }\r\n        }\r\n\r\n        if (this.playerId) return this.playerId;\r\n    }\r\n\r\n    public getPlayerPhoto() {\r\n        if (this.playerId) return FBInstant.player.getPhoto();\r\n    }\r\n\r\n    public getPlayerName() {\r\n        if (this.playerId) return FBInstant.player.getName();\r\n    }\r\n\r\n    private getShareImg(cb) {\r\n        if (this.shareImg) {\r\n            return cb(this.shareImg);\r\n        }\r\n\r\n        cc.resources.load('Base64/ShareImg', (err, file) => {\r\n            this.shareImg = file.text;\r\n            cb(this.shareImg);\r\n        });\r\n    }\r\n\r\n    public shareGame() {\r\n        this.getShareImg((img) => {\r\n            const sharePlayerID = FBInstant.player.getID();\r\n\r\n            FBInstant.shareAsync({\r\n                intent: 'REQUEST',\r\n                image: img,\r\n                text: \"Let's play hexa reach the star!\",\r\n                data: { sharePlayerID },\r\n            });\r\n        });\r\n    }\r\n\r\n    public invitePlay(customData = { playerScore: 0, playerId: '' }) {\r\n        const postInvite = (leaderboardName) => {\r\n            FBInstant.getLeaderboardAsync(leaderboardName)\r\n                .then((leaderboard) => {\r\n                    return leaderboard.setScoreAsync(\r\n                        customData.playerScore,\r\n                        ''\r\n                    );\r\n                })\r\n                .then(() => {\r\n                    return FBInstant.postSessionScoreAsync(\r\n                        customData.playerScore\r\n                    );\r\n                })\r\n                .then(() => {\r\n                    FBInstant.updateAsync({\r\n                        action: 'LEADERBOARD',\r\n                        name: leaderboardName,\r\n                        text: `${FBInstant.player.getName()} has been achieved ${\r\n                            customData.playerScore\r\n                        } and invite you to play Hexa Reach The Star`,\r\n                    })\r\n                        .then(() => {\r\n                            cc.log('send invite - update leaderboard');\r\n                            FBInstant.context\r\n                                .switchAsync('')\r\n                                .then(() => {\r\n                                    console.log(\r\n                                        'switch back context success',\r\n                                        FBInstant.context.getType(),\r\n                                        FBInstant.context.getID()\r\n                                    );\r\n                                })\r\n                                .catch((err) => {\r\n                                    console.log('switch back context err', err);\r\n                                });\r\n                        })\r\n                        .catch((err) => {\r\n                            console.log('errr', err);\r\n                        });\r\n                })\r\n                .catch((err) => {\r\n                    console.log('err', err);\r\n                });\r\n        };\r\n\r\n        let contextFunc = FBInstant.context.chooseAsync;\r\n        const param = [];\r\n\r\n        if (customData.playerId) {\r\n            contextFunc = FBInstant.context.createAsync;\r\n            param.push(customData.playerId);\r\n        }\r\n\r\n        contextFunc(...param)\r\n            .then(() => {\r\n                const leaderboardName =\r\n                    LEADERBOARD_NAME + FBInstant.context.getID();\r\n                postInvite(leaderboardName);\r\n            })\r\n            .catch((err = null) => {\r\n                console.log('fail?', err);\r\n            });\r\n    }\r\n\r\n    public getConnectedPlayers(cb) {\r\n        try {\r\n            FBInstant.player\r\n                .getConnectedPlayersAsync()\r\n                .then((players) => {\r\n                    const data = players.map((p) => {\r\n                        return {\r\n                            id: p.getID(),\r\n                            name: p.getName(),\r\n                            photo: p.getPhoto(),\r\n                        };\r\n                    });\r\n\r\n                    cb(data);\r\n                })\r\n                .catch((err) => {\r\n                    console.log('get list fail', err);\r\n                });\r\n        } catch (err) {\r\n            cc.log('error:', err);\r\n        }\r\n    }\r\n\r\n    public setPlayerData(data, cb) {\r\n        try {\r\n            if (!FBInstant) return cb(null);\r\n        } catch (err) {\r\n            return cb(null);\r\n        }\r\n\r\n        const saveData = {};\r\n        saveData[DATA_KEY] = data;\r\n\r\n        FBInstant.player\r\n            .setDataAsync(saveData)\r\n            .then(() => {\r\n                cb(null);\r\n            })\r\n            .catch((err) => {\r\n                cb(err);\r\n            });\r\n    }\r\n\r\n    public getPlayerData(cb) {\r\n        try {\r\n            if (!FBInstant) return cb(null, null);\r\n        } catch (err) {\r\n            return cb(null, null);\r\n        }\r\n\r\n        FBInstant.player\r\n            .getDataAsync([DATA_KEY])\r\n            .then((data) => {\r\n                cb(null, data[DATA_KEY]);\r\n            })\r\n            .catch((err) => {\r\n                cb(err, null);\r\n            });\r\n    }\r\n\r\n    public createShortcut(cb) {\r\n        try {\r\n            FBInstant.canCreateShortcutAsync().then((result) => {\r\n                if (result) {\r\n                    FBInstant.createShortcutAsync()\r\n                        .then(() => {\r\n                            console.log('--- create shortcut success');\r\n                            cb(true);\r\n                        })\r\n                        .catch(function () {\r\n                            console.log('--- create shortcut fail');\r\n                            cb(false);\r\n                        });\r\n                }\r\n                cb(false);\r\n            });\r\n        } catch (exc) {\r\n            console.error(exc);\r\n            cb(false);\r\n        }\r\n    }\r\n\r\n    public subcribeBot(cb) {\r\n        try {\r\n            FBInstant.player\r\n                .canSubscribeBotAsync()\r\n                .then((result) => {\r\n                    if (result) {\r\n                        FBInstant.player\r\n                            .subscribeBotAsync()\r\n                            .then(() => {\r\n                                console.log('--- subcribe bot success');\r\n                                cb(true);\r\n                            })\r\n                            .catch(function (e) {\r\n                                console.log('--- subcribe bot fail', e);\r\n                                cb(false);\r\n                            });\r\n                    } else {\r\n                        cb(false);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log('can not subcribe bot', err);\r\n                    cb(false);\r\n                });\r\n        } catch (exc) {\r\n            console.log(exc);\r\n            cb(false);\r\n        }\r\n    }\r\n\r\n    public getLocale() {\r\n        return FBInstant.getLocale();\r\n    }\r\n\r\n    public setSessionData(data) {\r\n        FBInstant.setSessionData(data);\r\n    }\r\n\r\n    public inviteGame(playerScore = 100) {\r\n        this.getShareImg((img) => {\r\n            const invitorPlayerID = FBInstant.player.getID();\r\n\r\n            FBInstant.inviteAsync({\r\n                image: img,\r\n                text: {\r\n                    default: `${FBInstant.player.getName()} has been achieved ${playerScore} and invite you to play Hexa Reach The Star`,\r\n                },\r\n                data: { invitorPlayerID },\r\n            })\r\n                .then(() => {\r\n                    console.log('--- send invite game success');\r\n                })\r\n                .catch((err) => {\r\n                    console.log('--- send invite game fail', err);\r\n                });\r\n        });\r\n    }\r\n\r\n    public playWithFriend() {\r\n        return FBInstant.context.chooseAsync();\r\n    }\r\n\r\n    public sendInviteAfterPlay(playerScore) {\r\n        if (FBInstant.context.getType() !== 'SOLO') {\r\n            let playerName = FBInstant.player.getName();\r\n            let leaderBoardContextName =\r\n                LEADERBOARD_NAME + FBInstant.context.getID();\r\n\r\n            this.getShareImg((img) => {\r\n                FBInstant.updateAsync({\r\n                    action: 'CUSTOM',\r\n                    cta: 'PLAY NOW',\r\n                    text: {\r\n                        default: `${playerName} has ${playerScore} when playing Hexa: Reach the Start`,\r\n                    },\r\n                    image: img,\r\n                    template: 'play_turn',\r\n                    strategy: 'IMMEDIATE',\r\n                    notification: 'NO_PUSH',\r\n                }).then(function () {\r\n                    console.log('Send invite player done');\r\n                });\r\n            });\r\n\r\n            FBInstant.postSessionScoreAsync(playerScore).then(() => {\r\n                console.log('Post Session score done');\r\n\r\n                FBInstant.getLeaderboardAsync(leaderBoardContextName)\r\n                    .then(function (leaderboard) {\r\n                        return leaderboard.setScoreAsync(playerScore);\r\n                    })\r\n                    .then(() => {\r\n                        console.log('Update score leaderboard done');\r\n                    });\r\n            });\r\n        }\r\n    }\r\n\r\n    public getLeaderBoard() {\r\n        return new Promise((resolve) => {\r\n            FBInstant.getLeaderboardAsync(\r\n                LEADERBOARD_NAME + FBInstant.context.getID()\r\n            )\r\n                .then((leaderboard) => {\r\n                    leaderboard.getEntriesAsync().then((data) => {\r\n                        resolve({\r\n                            response: true,\r\n                            leaderBoard: data,\r\n                        });\r\n                    });\r\n                })\r\n                .catch((err) => {\r\n                    resolve({\r\n                        response: false,\r\n                        leaderBoard: '',\r\n                        err,\r\n                    });\r\n                });\r\n        });\r\n    }\r\n}\r\n"]}